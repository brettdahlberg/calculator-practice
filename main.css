/*
This is a good layout for a mobile-first CSS template.
Following this flow will minimize the number of styles you need to write and will ensure you are thinking, designing and developing mobile-first.
Most of your styles get written like standard CSS, but for your mobile presentation. Generally speaking, a good mobile presention will stretch out nicely for larger screens.
Sometimes, when we stretch out to larger screens, we need to make minor tweaks for the larger devices -- you can make these tweaks in the tablet media query, or if the issue exists on desktop only, the desktop media query.
You will find this is far easier than the opposite task of using CSS to cram your desktop experience into a mobile device.
*/


/* http://meyerweb.com/eric/tools/css/reset/
v2.0 | 20110126
License: none (public domain)
*/

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    vertical-align: baseline;
}


/* HTML5 display-role reset for older browsers */

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    display: block;
}

body {
    line-height: 1.2;
}

ol, ul {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

#input, #output {
    margin-top: 10px;
    margin-bottom: 10px;
    padding-top: 10px;
    padding: bottom:10px;
    position: relative
}

#output {
    display: none;
}

#output.show {
    display: block;
}


/*Make an image the same size as the #output div.*/


/*.coverup {*/


/*width: 100%;*/


/*height: 100%;*/


/*position: relative;*/


/*Image is white (red for while I'm practicing) and opaque (translucent for while I'm practicing).*/


/*background-color: rgba(240, 20, 20, .05);*/


/*opacity: 100;*/


/*z-index: 3;*/


/* Dial the z-index down because even if an element doesn't have opacity it still has 'mass'. The info window would get in the way of clicking on the circles without this */


/*transition: opacity .2s ease-in-out;*/


/* this gives us the fade in and fade out effect but only on the opacity element. You cannot use the display property with transitions. */


/*All else failed.*/


/*}*/


/*For big screens*/

@media(min-width: 681px) {
    /* Any adjustments for tablets and larger go here. Note these styles will be applied to anything 681px or larger -- so tablet AND desktop */
}

.holdall {
    max-width: 640px;
    margin: 0 auto;
    display: block;
}

@media(min-width: 729px) {
    /* Any adjustments for desktop and larger go here. Note these styles will be applied to anything 729px or larger -- so desktop */
    .info_popIn {
        font-size: 3em;
        padding-top: 90px;
        padding-left: 60px;
        padding-right: 60px;
        padding-bottom: 30px;
    }
    .btn_close {
        font-size: 4em;
    }
    .btn_close:hover {
        color: blue;
    }
    h1 {
        font-size: 3em;
        text-align: center;
    }
    h4 {
        font-size: 1.3em;
    }
    .caption {
        font-size: .9em;
    }
    .main-text {
        font-size: 1.2em;
    }
    .circle {
        width: 60px;
        height: 60px;
        border-radius: 60px;
        background-color: white;
        border: solid darkgreen;
        border-width: 2px;
        opacity: .6;
        z-index: 3;
        display: block;
    }
}
